steps:
  - id: 'setup secret variables' 
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Fetch the secret value from Secret Manager
        SECRET_VALUE=$(gcloud secrets versions access latest --secret="Pdf-render-service")

        # Parse the secret value to extract individual environment variables
        echo "$$SECRET_VALUE" | grep BASIC_AUTH_USER | cut -d '=' -f2 > /workspace/BASIC_AUTH_USER
        echo "$$SECRET_VALUE" | grep BASIC_AUTH_PASSWORD | cut -d '=' -f2 > /workspace/BASIC_AUTH_PASSWORD
        echo "$$SECRET_VALUE" | grep NUM_INSTANCES | cut -d '=' -f2 > /workspace/NUM_INSTANCES

  - id: 'build image' 
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Build the Docker image with build arguments
        docker build \
          --build-arg NUM_INSTANCES=$(cat /workspace/NUM_INSTANCES) \
          --tag $_AR_HOSTNAME/$PROJECT_ID/$_AR_REPOSITORY/$_SERVICE_NAME:$SHORT_SHA \
          --tag $_AR_HOSTNAME/$PROJECT_ID/$_AR_REPOSITORY/$_SERVICE_NAME:latest \
          --cache-from $_AR_HOSTNAME/$PROJECT_ID/$_AR_REPOSITORY/$_SERVICE_NAME:latest \
          --target production \
          .

  - id: 'push image' 
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPOSITORY/$_SERVICE_NAME:$SHORT_SHA'

  - id: 'deploy service' 
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Deploy the Docker image
        gcloud run deploy $_SERVICE_NAME \
          --image=$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPOSITORY/$_SERVICE_NAME:$SHORT_SHA \
          --platform=managed \
          --region=$_DEPLOY_REGION \
          --allow-unauthenticated \
          --set-env-vars BASIC_AUTH_USER=$(cat /workspace/BASIC_AUTH_USER),BASIC_AUTH_PASSWORD=$(cat /workspace/BASIC_AUTH_PASSWORD),NUM_INSTANCES=$(cat /workspace/NUM_INSTANCES) \

images:
  - '$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPOSITORY/$_SERVICE_NAME:$SHORT_SHA'
  - '$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPOSITORY/$_SERVICE_NAME:latest'
options:
  logging: CLOUD_LOGGING_ONLY